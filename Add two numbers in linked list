# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        
        result_head = ListNode()
        start = result_head
        l1_finished, l2_finished, carry = 0, 0, 0
        
        while l1 and l2:
            node = ListNode()
            temp = node
            start.next = node
            start = temp
            
            val = l1.val+l2.val+carry
            total = val%10
            carry = val//10
            
            node.val = total
            
            if not l1.next: l1_finished = 1
            if not l2.next: l2_finished = 1
            
            l1=l1.next
            l2=l2.next
        
        if l1_finished and l2_finished:
            if carry == 1:
                node = ListNode()
                node.val = carry
                start.next = node
            return result_head.next

        if l1_finished:
            if carry==0:
                start.next = l2
                
            else:
                while carry==1 and l2:
                    node = ListNode()
                    temp = node
                    start.next = node
                    start = temp
                    val = l2.val + carry
                    total = val%10
                    carry = val//10
                    node.val = total
                    l2 = l2.next
                if carry==0 and not l2:
                    pass
                elif carry == 0:
                    start.next = l2
                else:
                    node = ListNode()
                    node.val = carry
                    start.next = node
            return result_head.next
        
        else:
            if carry==0:
                start.next = l1
                
            else:
                while carry==1 and l1:
                    node = ListNode()
                    temp = node
                    start.next = node
                    start = temp
                    val = l1.val + carry
                    total = val%10
                    carry = val//10
                    node.val = total
                    l1 = l1.next
                if carry==0 and not l1:
                    pass
                elif carry == 0:
                    start.next = l1
                else:
                    node = ListNode()
                    node.val = carry
                    start.next = node
            return result_head.next
