# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right


# video : https://www.youtube.com/watch?v=Rezetez59Nk&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=17

maxi = 0 # Declare the glovbal maxi

class Solution:    
    
    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        global maxi # To refer the global maxi
        
        maxi=0 # To reset the value of maxi ------> v.v.v.v.v IMP
        Solution.height(root)
        return maxi
    
    def height(node):
        global maxi # To refer the global maxi
        if not node: return 0 # This is impportant.. earlier  we were returning nothing
        
        lh = Solution.height(node.left)
        rh = Solution.height(node.right)
        
        maxi = max(maxi, lh+rh)
        # print(f"maxi = {maxi}")
        
        return 1+max(lh, rh)
