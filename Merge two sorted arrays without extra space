class Solution:
    def merge(self, arr1, arr2, n, m):
        
        # below code is optimized bet takes much time at 225 / 315 test case.
        # i,j, j_pos=0,0,0

        
        # while i <= n-1:
        #     j_pos = 0
        #     if arr2[j] < arr1[i]:
        #         arr1[i], arr2[j] = arr2[j], arr1[i]

        #         for pos in range(m-1):
        #             if arr2[j_pos]>arr2[j_pos+1]:
        #                 arr2[j_pos], arr2[j_pos+1] = arr2[j_pos+1], arr2[j_pos]
        #                 j_pos +=1
        #             else:
        #                 break
        #     i+=1
                
        # return arr1 + arr2
        
        
        # accepted for all the cases.
        # Python sort() is efficient way to sort the array/ list
        i=n-1
        j=0
        while i>=0 and j<m:
            if arr1[i]>=arr2[j]:
                arr1[i],arr2[j]=arr2[j],arr1[i]
            i-=1
            j+=1
        arr1.sort()
        arr2.sort()
